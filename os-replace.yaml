---
- hosts: localhost
  gather_facts: false
  become: false
  vars:
    platform: "openstack"
    test_os: "rhel-9-4"
    ssh_key_pub: ""
    ssh_key_pub_file: ""
    ansible_python_interpreter: /usr/bin/python3
    ansible_connection: local
    cloud_profile: "rhos-01"

  tasks:
    - set_fact:
        random_num: "{{ 9999 | random(start=1001) }}"
    - set_fact:
        instance_name: "bifrost-{{ platform }}-{{ test_os }}-{{ random_num }}"

    - name: Deploy runner on openstack
      block:
        - name: Deploy RHEL instance
          openstack.cloud.server:
            cloud: "{{ cloud_profile }}"
            name: "{{ instance_name }}"
            image: "edge-fedora-39"
            flavor: "ci.standard.small"
            network: "shared_net_9"
            key_name: "rhel-edge"
            security_groups: ssh_only
            auto_ip: true
            config_drive: true
            wait: true
            timeout: 600
            userdata: |
              #cloud-config
              users:
                - default
                - name: admin
                  gecos: Administrator
                  groups: users,wheel
                  sudo: ALL=(ALL) NOPASSWD:ALL
                  ssh_authorized_keys:
                    - "{{ ssh_key_pub }}"
              packages:
                - python3
                - python3-dnf

        - name: Makre sure instance is running
          openstack.cloud.server_info:
            cloud: "{{ cloud_profile }}"
            server: "{{ instance_name }}"
          register: instance_status_result
          retries: 20
          until: instance_status_result.servers[0].vm_state == "active" and instance_status_result.servers[0].access_ipv4 != ""

        - set_fact:
            instance_ip: "{{ instance_status_result.servers[0].addresses.shared_net_9[0].addr }}"
          when:
            - instance_status_result is succeeded
      when: platform == "openstack"

    - name: Deploy runner on Google Cloud
      block:
        - name: gcloud/gsutil - authorizing with a service account
          command: 
            /usr/bin/gcloud auth activate-service-account \
            --key-file="{{ lookup('env', 'GCP_SERVICE_ACCOUNT_FILE') }}"

        - name: create gcp key file
          copy:
            dest: "{{ playbook_dir }}/gcp_key"
            content: "admin:{{ ssh_key_pub }}"

        - name: create gcp instance
          command:
            "/usr/bin/gcloud compute instances create {{ instance_name }} \
            --zone=us-central1-a \
            --machine-type=n2-standard-2 \
            --boot-disk-auto-delete \
            --boot-disk-size=80GB \
            --boot-disk-type=pd-ssd \
            --metadata-from-file=ssh-keys={{ playbook_dir }}/gcp_key \
            --metadata=block-project-ssh-keys=TRUE \
            --provisioning-model=SPOT \
            --image-family=centos-stream-9 \
            --image-project=centos-cloud \
            --service-account={{ lookup('env', 'GCP_SERVICE_ACCOUNT_NAME') }} \
            --project={{ lookup('env', 'GCP_PROJECT') }} \
            --format=json"
          register: result_instance

        - set_fact:
            instance_ip: "{{ result_instance.stdout | from_json | json_query('[0].networkInterfaces[0].accessConfigs[0].natIP') }}"
      when: platform == "gcp"

    - name: Waits until instance is reachable
      wait_for:
        host: "{{ instance_ip }}"
        port: 22
        search_regex: OpenSSH
        delay: 10
      retries: 30
      register: result_ssh_check
      until: result_ssh_check is success

    - name: Add instance ip into host group guest
      add_host:
        name: "{{ instance_ip }}"
        groups: guest
        runner_name: "{{ instance_name }}"

    # # Dev enviornment needs this setting
    # - name: set private key permisson to 600
    #   file:
    #     path: key/ostree_key
    #     mode: "0600"

- hosts: guest
  gather_facts: true
  become: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_user: admin
    ansible_private_key_file: "{{ playbook_dir }}/key/ostree_key"
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
    hide_sensitive_logs: true

  tasks:
    - name: Ensure cloud-init has finished
      raw: test -f /var/lib/cloud/instance/boot-finished
      retries: 30
      delay: 20
      register: cloud_init_check
      changed_when: false
      until: cloud_init_check is success
      when: platform == "openstack"

    - name: Wait 10 seconds for gcp instance
      wait_for:
        timeout: 10
      delegate_to: localhost
      when: platform == "gcp"

    - name: Install podman and skopeo
      package:
        name:
          - podman
          - skopeo
        state: present
      become: true

    - name: Install image
      command:
        "podman run \
         --rm \
         --privileged \
         --pid=host \
         -v /:/target \
         --security-opt label=type:unconfined_t \
         {{ test_image_url }} \
         bootc install to-filesystem --karg=console=ttyS0,115200n8 --replace=alongside /target"

    - name: reboot to deploy new ostree commit
      reboot:
      become: true

    - name: wait for connection to become reachable/usable
      wait_for_connection:
      delay: 30
